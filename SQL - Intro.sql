-- Five Categories of SQL queries
-- DDL : Data Definition Language
-- 			- any query that work on the structure of the table come under DDL
--			- create, alter, drop, truncate etc.
-- DML : Data Manipulation Language
-- 			- any query that work on the data of the table comes under DML
--			- insert, update, delete
-- DQL : Data Querying Language
--			- a query that queries the table
-- 			- select query
--			- select query has many clauses like where, group by, having, order by
-- TCL : Transaction Control Language
--			- this includes transaction related queries
--			- comit, rollback, savepoint etc.
-- DCL : Data Control Language
--			- this includes queries that grant previleges to user and also revoke those previleges
--			- grant, revoke 

show databases;

use book_management_system;

show tables;

select * from book_details;
select * from author_details;
select * from character_details;

-- MySQL Datatypes

-- string datatypes

-- CHAR(size) 				: fixed length string, size can be from 0 to 255
-- VARCHAR(size) 			: variable length string, size can be from 0 to 65535
-- BINARY(size)				: same as CHAR() but stores binary byte strings
-- VARBINARY(size)  		: same as VARCHAR() but stores binary byte strings
-- TINYBLOB					: for BLOB(Binary Large Objects). max length = 255 bytes
-- BLOB						: max length = 65,535 bytes
-- MEDIUMBLOB				: max length = 16,777,215 bytes
-- LONGBLOB					: max length = 4,294,967,295 bytes
-- TINYTEXT					: holds a string. max length = 255 characters
-- TEXT(size)				: max length = 65,535 characters
-- MEDIUMTEXT				: max length = 16,777,215 characters
-- LONGTEXT					: max length = 4,294,967,295 characters
-- ENUM(val1, val2, val3, ...) : a string object that can have only one value, chosen froma list of possible values.
-- SET(val1, val2, val3, ...)  : a string object that can have 0 or more values, chosen from a list of possible values.

-- numeric datatypes
-- BIT(size)	A bit-value type. The number of bits per value is specified in size. The size parameter can hold a value from 1 to 64. The default value for size is 1.
-- TINYINT(size)	A very small integer. Signed range is from -128 to 127. Unsigned range is from 0 to 255. The size parameter specifies the maximum display width (which is 255)
-- BOOL	Zero is considered as false, nonzero values are considered as true.
-- BOOLEAN	Equal to BOOL
-- SMALLINT(size)	A small integer. Signed range is from -32768 to 32767. Unsigned range is from 0 to 65535. The size parameter specifies the maximum display width (which is 255)
-- MEDIUMINT(size)	A medium integer. Signed range is from -8388608 to 8388607. Unsigned range is from 0 to 16777215. The size parameter specifies the maximum display width (which is 255)
-- INT(size)	A medium integer. Signed range is from -2147483648 to 2147483647. Unsigned range is from 0 to 4294967295. The size parameter specifies the maximum display width (which is 255)
-- INTEGER(size)	Equal to INT(size)
-- BIGINT(size)	A large integer. Signed range is from -9223372036854775808 to 9223372036854775807. Unsigned range is from 0 to 18446744073709551615. The size parameter specifies the maximum display width (which is 255)
-- FLOAT(size, d)	A floating point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter. This syntax is deprecated in MySQL 8.0.17, and it will be removed in future MySQL versions
-- FLOAT(p)	A floating point number. MySQL uses the p value to determine whether to use FLOAT or DOUBLE for the resulting data type. If p is from 0 to 24, the data type becomes FLOAT(). If p is from 25 to 53, the data type becomes DOUBLE()
-- DOUBLE(size, d)	A normal-size floating point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter
-- DOUBLE PRECISION(size, d)	 
-- DECIMAL(size, d)	An exact fixed-point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter. The maximum number for size is 65. The maximum number for d is 30. The default value for size is 10. The default value for d is 0.
-- DEC(size, d)	Equal to DECIMAL(size,d)
-- Note: All the numeric data types may have an extra option: UNSIGNED or ZEROFILL. If you add the UNSIGNED option, MySQL disallows negative values for the column. If you add the ZEROFILL option, MySQL automatically also adds the UNSIGNED attribute to the column.

-- Date and Time Data Types
-- DATE	A date. Format: YYYY-MM-DD. The supported range is from '1000-01-01' to '9999-12-31'
-- DATETIME(fsp)	A date and time combination. Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1000-01-01 00:00:00' to '9999-12-31 23:59:59'. Adding DEFAULT and ON UPDATE in the column definition to get automatic initialization and updating to the current date and time
-- TIMESTAMP(fsp)	A timestamp. TIMESTAMP values are stored as the number of seconds since the Unix epoch ('1970-01-01 00:00:00' UTC). Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1970-01-01 00:00:01' UTC to '2038-01-09 03:14:07' UTC. Automatic initialization and updating to the current date and time can be specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE CURRENT_TIMESTAMP in the column definition
-- TIME(fsp)	A time. Format: hh:mm:ss. The supported range is from '-838:59:59' to '838:59:59'
-- YEAR	A year in four-digit format. Values allowed in four-digit format: 1901 to 2155, and 0000.
-- MySQL 8.0 does not support year in two-digit format.

-- mysql functions
-- string functions
-- ASCII	Returns the ASCII value for the specific character
-- CHAR_LENGTH	Returns the length of a string (in characters)
-- CHARACTER_LENGTH	Returns the length of a string (in characters)
-- CONCAT	Adds two or more expressions together
-- CONCAT_WS	Adds two or more expressions together with a separator
-- FIELD	Returns the index position of a value in a list of values
-- FIND_IN_SET	Returns the position of a string within a list of strings
-- FORMAT	Formats a number to a format like "#,###,###.##", rounded to a specified number of decimal places
-- INSERT	Inserts a string within a string at the specified position and for a certain number of characters
-- INSTR	Returns the position of the first occurrence of a string in another string
-- LCASE	Converts a string to lower-case
-- LEFT	Extracts a number of characters from a string (starting from left)
-- LENGTH	Returns the length of a string (in bytes)
-- LOCATE	Returns the position of the first occurrence of a substring in a string
-- LOWER	Converts a string to lower-case
-- LPAD	Left-pads a string with another string, to a certain length
-- LTRIM	Removes leading spaces from a string
-- MID	Extracts a substring from a string (starting at any position)
-- POSITION	Returns the position of the first occurrence of a substring in a string
-- REPEAT	Repeats a string as many times as specified
-- REPLACE	Replaces all occurrences of a substring within a string, with a new substring
-- REVERSE	Reverses a string and returns the result
-- RIGHT	Extracts a number of characters from a string (starting from right)
-- RPAD	Right-pads a string with another string, to a certain length
-- RTRIM	Removes trailing spaces from a string
-- SPACE	Returns a string of the specified number of space characters
-- STRCMP	Compares two strings
-- SUBSTR	Extracts a substring from a string (starting at any position)
-- SUBSTRING	Extracts a substring from a string (starting at any position)
-- SUBSTRING_INDEX	Returns a substring of a string before a specified number of delimiter occurs
-- TRIM	Removes leading and trailing spaces from a string
-- UCASE	Converts a string to upper-case
-- UPPER	Converts a string to upper-case

-- numeric functions
-- ABS	Returns the absolute value of a number
-- ACOS	Returns the arc cosine of a number
-- ASIN	Returns the arc sine of a number
-- ATAN	Returns the arc tangent of one or two numbers
-- ATAN2	Returns the arc tangent of two numbers
-- AVG	Returns the average value of an expression
-- CEIL	Returns the smallest integer value that is >= to a number
-- CEILING	Returns the smallest integer value that is >= to a number
-- COS	Returns the cosine of a number
-- COT	Returns the cotangent of a number
-- COUNT	Returns the number of records returned by a select query
-- DEGREES	Converts a value in radians to degrees
-- DIV	Used for integer division
-- EXP	Returns e raised to the power of a specified number
-- FLOOR	Returns the largest integer value that is <= to a number
-- GREATEST	Returns the greatest value of the list of arguments
-- LEAST	Returns the smallest value of the list of arguments
-- LN	Returns the natural logarithm of a number
-- LOG	Returns the natural logarithm of a number, or the logarithm of a number to a specified base
-- LOG10	Returns the natural logarithm of a number to base 10
-- LOG2	Returns the natural logarithm of a number to base 2
-- MAX	Returns the maximum value in a set of values
-- MIN	Returns the minimum value in a set of values
-- MOD	Returns the remainder of a number divided by another number
-- PI	Returns the value of PI
-- POW	Returns the value of a number raised to the power of another number
-- POWER	Returns the value of a number raised to the power of another number
-- RADIANS	Converts a degree value into radians
-- RAND	Returns a random number
-- ROUND	Rounds a number to a specified number of decimal places
-- SIGN	Returns the sign of a number
-- SIN	Returns the sine of a number
-- SQRT	Returns the square root of a number
-- SUM	Calculates the sum of a set of values
-- TAN	Returns the tangent of a number
-- TRUNCATE	Truncates a number to the specified number of decimal places

-- date and time functions
-- ADDDATE	Adds a time/date interval to a date and then returns the date
-- ADDTIME	Adds a time interval to a time/datetime and then returns the time/datetime
-- CURDATE	Returns the current date
-- CURRENT_DATE	Returns the current date
-- CURRENT_TIME	Returns the current time
-- CURRENT_TIMESTAMP	Returns the current date and time
-- CURTIME	Returns the current time
-- DATE	Extracts the date part from a datetime expression
-- DATEDIFF	Returns the number of days between two date values
-- DATE_ADD	Adds a time/date interval to a date and then returns the date
-- DATE_FORMAT	Formats a date
-- DATE_SUB	Subtracts a time/date interval from a date and then returns the date
-- DAY	Returns the day of the month for a given date
-- DAYNAME	Returns the weekday name for a given date
-- DAYOFMONTH	Returns the day of the month for a given date
-- DAYOFWEEK	Returns the weekday index for a given date
-- DAYOFYEAR	Returns the day of the year for a given date
-- EXTRACT	Extracts a part from a given date
-- FROM_DAYS	Returns a date from a numeric datevalue
-- HOUR	Returns the hour part for a given date
-- LAST_DAY	Extracts the last day of the month for a given date
-- LOCALTIME	Returns the current date and time
-- LOCALTIMESTAMP	Returns the current date and time
-- MAKEDATE	Creates and returns a date based on a year and a number of days value
-- MAKETIME	Creates and returns a time based on an hour, minute, and second value
-- MICROSECOND	Returns the microsecond part of a time/datetime
-- MINUTE	Returns the minute part of a time/datetime
-- MONTH	Returns the month part for a given date
-- MONTHNAME	Returns the name of the month for a given date
-- NOW	Returns the current date and time
-- PERIOD_ADD	Adds a specified number of months to a period
-- PERIOD_DIFF	Returns the difference between two periods
-- QUARTER	Returns the quarter of the year for a given date value
-- SECOND	Returns the seconds part of a time/datetime
-- SEC_TO_TIME	Returns a time value based on the specified seconds
-- STR_TO_DATE	Returns a date based on a string and a format
-- SUBDATE	Subtracts a time/date interval from a date and then returns the date
-- SUBTIME	Subtracts a time interval from a datetime and then returns the time/datetime
-- SYSDATE	Returns the current date and time
-- TIME	Extracts the time part from a given time/datetime
-- TIME_FORMAT	Formats a time by a specified format
-- TIME_TO_SEC	Converts a time value into seconds
-- TIMEDIFF	Returns the difference between two time/datetime expressions
-- TIMESTAMP	Returns a datetime value based on a date or datetime value
-- TO_DAYS	Returns the number of days between a date and date "0000-00-00"
-- WEEK	Returns the week number for a given date
-- WEEKDAY	Returns the weekday number for a given date
-- WEEKOFYEAR	Returns the week number for a given date
-- YEAR	Returns the year part for a given date
-- YEARWEEK	Returns the year and week number for a given date

